{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":"<p>A modular XPlanar control component function block with minimal overhead built on the Planar Motion and XPlanar Utility TF5890 libraries that can easily scale to custom and/or larger projects.  This function block can be used within the SPT framework or any other architecture.</p>"},{"location":"index.html#class-diagram","title":"Class Diagram","text":"<pre><code>classDiagram\n    I_XPlanarTrack &lt;|.. FB_XPlanarTrackSegment\n    I_XPlanarStation &lt;|.. FB_XPlanarStation \n    I_XPlanarMover o--|&gt; I_XPlanarStation\n    I_XPlanarMover &lt;|.. FB_XPlanarMover\n    I_MoveCommands &lt;|.. FB_XPlanarMover\n    I_MoveDynamics &lt;|.. FB_XPlanarMover\n\n    ip --&gt; I_XPlanarMover\n    ip --&gt; I_XPlanarTrack\n    ip --&gt; I_XPlanarStation  \n\n    class FB_Component_XPlanar{\n      Bool Abort()\n      I_PlanarTaskResult AddMoversToGroup()\n      I_PlanarTaskResult AddTracksToGroup()\n      I_PlanarTaskResult EnableGroup()\n      I_PlanarTaskResult EnableMovers()\n      I_PlanarTaskResult EnableTracks()\n      I_PlanarTaskResult IdentifyMovers()\n      I_PlanarTaskResult MoverRedetect()\n      I_PlanarTaskResult Recover()\n      BOOL Reset()\n      CreateEvents()\n      HMICommunication()\n      Monitoring()\n      CyclicLogic()\n    }\n    class I_XPlanarMover{\n      MoverVector ActualPosition\n      REFERENCE_TO ARRAY[1..MAX_LOG_COUNT] of STRING CommandLog\n      I_XPlanarStation Destination\n      I_MoveDynamics Dynamics\n      LREAL Gap\n      STRING IdentifiedBTN\n      BOOL InStation\n      I_MoveCommands I_MoveCommands\n      STRING MoverBTN\n      UDINT MoverIndex\n      MOVERTYPE MoverType\n      REFERENCE_TO Tc3_MC3PlanarMotion.MC_PlanarMover pm\n      REFERENCE_TO CDT_MCTOPLC_PLANAR_MOVER_STD Status\n      I_TcIoXPlanarMover Utility\n\n      I_PlanarTaskResult AddToGroup(PlanarGroup)\n      I_PlanarTaskResult Disable()\n      I_PlanarTaskResult Enable()\n      I_PlanarTaskResult Halt()\n      I_PlanarTaskResult Reset()\n    }\n\n    class I_MoveCommands{\n      I_PlanarTaskResult FreeMove(LREAL:XPosition, LREAL:YPosition)\n      I_PlanarTaskResult JoinClosestTrack(BOOL:UseOrientation)\n      I_PlanarTaskResult JoinTrack(I_XPlanarTrack:ipTrack, BOOL:UseOrientation)\n      I_PlanarTaskResult LeaveTrack(LREAL:DestinationX, LREAL:DestinationY, BOOL:UseOrientation)\n      I_PlanarTaskResult Rotate(LREAL:Position, DINT:AdditionalTurns)\n      I_PlanarTaskResult SendToStation(I_XPlanarStation:Destination)\n      I_PlanarTaskResult SquareUp()\n      I_PlanarTaskResult TiltA(LREAL:Position)\n      I_PlanarTaskResult TiltB(LREAL:Position)\n      I_PlanarTaskResult TrackMove(LREAL:Position, LREAL:Gap, I_XPlanarTrack:Track, MC_DIRECTION:Direction)\n      I_PlanarTaskResult TrackMove(LREAL:XPosition, LREAL:YPosition, LREAL:Gap, I_XPlanarTrack:Track, MC_DIRECTION:Direction)\n      I_PlanarTaskResult VerticalMove(LREAL:Position)\n    }\n\n    class I_MoveDynamics{\n      REFERENCE_TO ST_MoveDynamics : Movement\n      REFERENCE_TO ST_MoveDynamics : Rotation\n      REFERENCE_TO ST_MoveDynamics : Tilt\n    }\n\n    class FB_XPlanarMover{\n      CyclicLogic()\n      HMICommunication()\n    }\n    class I_XPlanarStation{\n      BOOL AllowQueing\n      BOOL CanReleaseMover\n      I_XPlanarMover CurrentMover\n      BOOL HasMover\n      UDINT ID\n      REFERENCE_TO FB_MoverQueue\n      STRING Name\n      I_XPlanarStation NextStation\n      UDINT NumMoversRequired\n      REFERENCE_TO PositionXYC Position\n      Position2D_LREAL Size\n      BOOL StationComplete\n      BOOL StationReady\n      E_StationType StationType\n      UDINT TrackID\n      UDINT Size\n\n      Execute()\n      BOOL Reset()\n    }\n    class FB_XPlanarStation{\n      CyclicLogic()\n      WatchForMover()\n    }\n    class I_XPlanarTrack{\n      REFERENCE_TO ST_TrackDefinition ST_TrackDefinition\n      UDINT Index\n      UDINT MoverCount\n      UDINT MovingMoverCount\n      REFERENCE_TO Tc3_MC3PlanarMotion.MC_PlanarTrack pm\n      REFERENCE_TO CDT_MCTOPLC_PLANAR_TRACK_STD Status\n      LREAL TrackLength\n      I_TcIoXPlanarTrack Utility\n\n      I_PlanarTaskResult AddToGroup(PlanarGroup)\n      I_PlanarTaskResult AppendLine(LREAL:StartPointX, LREAL:StartPointY, LREAL:EndPointX, LREAL:EndPointY)\n      I_PlanarTaskResult AppendPoint(LREAL:PointX, LREAL:PointY)\n      I_PlanarTaskResult Build()\n      I_PlanarTaskResult Clear()\n      I_PlanarTaskResult CloseLoop()\n      I_PlanarTaskResult Disable()\n      I_PlanarTaskResult Enable()\n      LREAL GetTrackPositionAt(PostionXYC:Position)\n      I_PlanarTaskResult Reset()\n\n    }\n    class FB_XPlanarTrackSegment{\n        CyclicLogic()\n    }\n\n    class ip{\n      Tracks : ARRAY[1..SystemParameters.TRACK_COUNT] of I_XPlanarTrack\n      Movers : ARRAY[1..SystemParameters.MOVER_COUNT] of I_XplanarMover\n      Stations : ARRAY[1..SystemParameters.STATION_COUNT] of I_XPlanarStation\n    }\n</code></pre>"},{"location":"changelog.html","title":"Changelog","text":""},{"location":"changelog.html#100-2024-09-16","title":"[1.0.0] - 2024-09-16","text":""},{"location":"changelog.html#added","title":"Added","text":"<ul> <li>Initial release</li> </ul>"},{"location":"functionblocks.html","title":"Function Blocks","text":""},{"location":"functionblocks.html#fb_planarfeedbackresult","title":"FB_PlanarFeedbackResult","text":"<p>Complete Implementation of the I_PlanarTaskResult interface used by method calls.  Includes MC_PlanarFeedback used by base XPlanar functions</p>"},{"location":"functionblocks.html#properties","title":"Properties","text":"Property Type Access Description PlanarFeedback REFERENCE TO MC_PlanarFeedback R Referece to Planar Feedback Function Block used by base XPlanar functions"},{"location":"functionblocks.html#methods","title":"Methods","text":"Method Return Type Access Description Update - PROTECTED Cyclically called by parent to keep MC_PlanarFeeback and feedback properties up to date along with any additional cyclic logic for the extended task."},{"location":"functionblocks.html#fb_component_xplanar","title":"FB_Component_XPlanar","text":"<p>(extends <code>FB_ComponentBase</code>) Function block that allows for an implementation of and XPlanar system as a component of a Machine.</p> <p>Note</p> <p>See also:     - I_ComponentBase</p>"},{"location":"functionblocks.html#notes","title":"Notes","text":"<ul> <li>The <code>CyclicLogic()</code> method should be called every PLC cycle to ensure the XPlanarEnvironment and XPlanarGroup NC objects along with each Movers/Stations/Tracks are cycled properly and statuses updated.  Called inherently if using SPT Framework</li> <li>The <code>Initialize()</code> method sets mover default halt dynamics and sets up all required interface pointers and references. Called inherently from Cyclic Logic</li> <li>The <code>Reset()</code> method contains and sequence to reset and re-enable faulted xplanar objects</li> <li>The <code>CreateEvents()</code> method should be called before operation to initialize configured Event Logger events Called inherently Cyclic Logic</li> <li>The <code>Monitoring()</code>method should be called to monitor status for event handling Called inherently if using SPT Framework</li> </ul>"},{"location":"functionblocks.html#properties_1","title":"Properties","text":"Property Type Access Description MoverDetectionInfo ST_TcIoMoverDetectionInfos R Structure of configured and detected count of each mover type TracksInitialized BOOL R Signal reflecting that track segments have been build and do not need to be re-initialized TileCount UDINT R Actual tile count of the XPlanar system Xpu I_TcIoXPlanarProcessingUnit R Access to XPlanar environment and driver functions"},{"location":"functionblocks.html#methods_1","title":"Methods","text":"Method Return Type Access Description Abort BOOL PUBLIC Aborting sequence for immediate halting of system and disabling movers BuildTracks BOOL PUBLIC Sequence for initializing all configured track segments CheckMovers BOOL PUBLIC Method that can be called to check all valid movers and raise an alarm if a lost mover is detected CheckTilePower BOOL PUBLIC Method that can be called to check DC Link voltage for all tiles and will raise an alarm if not ok EnableGroup BOOL PUBLIC Method used to Enable the XPlanar Group CyclicLogic - PUBLIC Handles XPlanar object update calls and all other logic that needs to happen every cycle EnableMovers BOOL PUBLIC Method used to Enable all movers with the option of adding them to the XPlanar Group EnableTracks BOOL PUBLIC Method used to Enable all track segments with the option of adding them to the XPlanar Group IdentifyMovers BOOL PUBLIC Method used to identify and sort movers based on assigned ID Bumper MoverRedetect BOOL PUBLIC Method used to perform a mover redetect RecoverStations BOOL PUBLIC Method to cylce through the prepare sequence of each station Reset -- -- --"},{"location":"functionblocks.html#fb_xplanarmover","title":"FB_XPlanarMover","text":"<p>Complete implementation of I_XPlanarMover for control of an XPlanar mover.</p> <p>Note</p> <p>See also:     - I_XPlanarMover</p>"},{"location":"functionblocks.html#notes_1","title":"Notes","text":"<ul> <li> <p>The <code>CyclicLogic()</code> method is inherently called by the FB_Component_XPlanar parent object and ensures the NC object is cycled properly and updates the component Busy flag</p> </li> <li> <p>The <code>Reset()</code> method should be called to clear any mover faults</p> </li> </ul>"},{"location":"functionblocks.html#hmicommunication-method","title":"HMICommunication method","text":"<p>The <code>HMICommunication()</code> method should be called to update status of the mover to the HMI. Called inherently if using SPT Framework</p>"},{"location":"functionblocks.html#fb_moverqueue","title":"FB_MoverQueue","text":"<p>Function Block to handle a queueing of movers in a station.</p>"},{"location":"functionblocks.html#properties_2","title":"Properties","text":"Property Type Access Description Count UDINT R Actual count of movers in the queue FirstMover I_XPlanarMover R Interface to the lead mover in the queue LastMover I_XPlanarMover R Interface to the last mover in the queue MoverIDs ARRAY[1..StationParameters.MaxMoversPerStation] R Index values of movers currently in the queue Queue Reference To ARRAY[1..StationParameters.MaxMoversPerStation] R Reference to the entire queue of mover interfaces"},{"location":"functionblocks.html#methods_2","title":"Methods","text":"Method Return Type Access Description Clear BOOL PUBLIC Full clear and reset of the queue buffer Dequeue BOOL PUBLIC Unload the leading mover from the queue Enqueue BOOL PUBLIC Load mover into the queue"},{"location":"functionblocks.html#fb_xplanarstationbase","title":"FB_XPlanarStationBase","text":"<p>Complete implementation of <code>I_XPlanarStation</code> for configuring and controlling a processing point on the XPlanar table.</p> <p>Note</p> <p>See also:     - I_XPlanarStation</p>"},{"location":"functionblocks.html#notes_2","title":"Notes","text":"<ul> <li> <p>The <code>Recover()</code> method is called by the recovery sequence of the FB_XPlanar parent object and if a mover is in the 'bubble' of the station it will be brought center and joined to the defined track segment of the station (if applicable).</p> </li> <li> <p>The <code>CyclicLogic()</code> method is inherently called by the FB_XPlanar sum up component and continually monitors for a mover to arrive.  </p> </li> <li>As movers pass through the <code>HasMover</code> flag will set, if a mover enters the station and stops the <code>MoverReady</code> flag will be set.</li> </ul>"},{"location":"functionblocks.html#fb_xplanartracksegment","title":"FB_XPlanarTrackSegment","text":"<p>Complete implementation of <code>I_XPlanarTrack</code> for configuring and building planar track segments in NC</p> <p>Note</p> <p>See also:     - I_XPlanarTrack</p>"},{"location":"functionblocks.html#notes_3","title":"Notes","text":"<ul> <li> <p>The <code>CyclicLogic()</code> method is inherently called by the FB_XPlanar parent object and ensures the NC object is cycled properly.</p> </li> <li> <p>The <code>Build()</code> method is called by the Build Tracks sequence of the FB_XPlanar parent object and checks the point configuration and initializes the segment with its linked NC group.</p> </li> </ul>"},{"location":"globals.html","title":"Interface Properties (ip)","text":"<p>Arrays of Mover, Track Segment, and Station interfaces for use within the application.</p> Name Type Access Description Movers ARRAY[1..SystemParameters.MOVER_COUNT] of I_XPlanarMover R Access to mover interfaces for higher level objects Stations ARRAY[1..SystemParameters.STATION_COUNT] of I_XPlanarStation R Access to station interfaces for higher level objects Tracks ARRAY[1..SystemParameters.TRACKCOUNT] of I_XPlanarTrack R Access to track interfaces for higher level objects"},{"location":"globals.html#xplanar","title":"XPlanar","text":"<p>System level variables</p> Name Type Access Description Environment Tc3_PlanarMotion.MC_PlanarEnvironment R Access to the XPlanar Environment object EnvironmentTcIo Tc3_XPlanarUtility.FB_TcIoXPlanarEnvironment R Access to the XPlanar Environment Utility TcIo Functions Group Tc3_PlanarMotion.MC_PlanarGroup R Access to the XPlanar Group object XPUCount UINT R Number of XPlanar processing units configured in the system PartCount UINT R Number of XPlanar Parts configured in the system TrackCount UNIT R Number of Track Segments configured in the system MoverCount UINT R Number of Movers configured in the system TileCount UINT R Number of Tiles configured in the system"},{"location":"globals.html#xplanarhmi","title":"XPlanarHMI","text":"<p>XPlanar object arrays for HMI display</p> Name Type Access Description MoverObjects ARRAY[1..SystemParameters.MOVER_COUNT] of ST_MoverObjectInfos R Size and BTN of each mover MoverPositions ARRAY[1..SystemParameters.MOVER_COUNT] of MoverVector R Current position of each mover TileObjects ARRAY[1..Param_TcIoXPlanarEnvironment.MaxTiles] of ST_TileObjectInfos R Size and position of each configured tile StationObjects ARRAY[1..SystemParameters.STATION_COUNT] of ST_StationObjectInfos R Size and position of each defined station"},{"location":"interfaces.html","title":"Interfaces","text":""},{"location":"interfaces.html#i_planartaskresult","title":"I_PlanarTaskResult","text":"<p>Definition of the XPlanar Task (Command) Feedback Class </p>"},{"location":"interfaces.html#properties","title":"Properties","text":"Property Type Access Description Aborted BOOL R Command was aborted by the Xplanar System BlockingObjectInfo REFERENCE TO PlanarObjectInfo R Object information returned if command was blocked by another planar object Busy BOOL R Command is active Done BOOL R Command was complented Error BOOL R Command returned an error ErrorID UDINT R Identification value of the error returned by the command"},{"location":"interfaces.html#i_xplanarmover","title":"I_XPlanarMover","text":"<p>Defines required functionality for an XPlanar mover.</p>"},{"location":"interfaces.html#properties_1","title":"Properties","text":"Property Type Access Description ActualPosition MoverVector R Current mover position. CommandLog REFERENCE TO ARRAY R Log of commands recently sent to the mover. Destination I_XPlanarStation RW Interface pointer for the next station the mover is going to. Error BOOL R Error signal from Move Commands ErrorID UDINT R Error ID returned from Command Feedback Gap LREAL RW Collision Avoidance Gap value used for On Track movements. IdentifiedBTN STRING RO Reported BTN from ID Bumper InStation BOOL RW Signal indicating mover is in a station queue MoveCommand I_MoveCommands RO Interface pointer to Mover Commands Dynamics I_MoveDynamics RW Interface to Velocity, Accel, Decel, Jerk dynamics containers used by move commands MoverBTN STRING(13) R BTN that is assigned by the driver MoverIndex UDINT RW Index number of the mover MoverType MoverType RO Identified Mover Type from TcCOM Object pm REFERENCE TO MC_PLanarMover_ R Reference to base planar motion functions RotateDynamics ST_MoveDynamics RW Sturcture of dynamic vars. Velocity, Accel, Decel, Jerk used by Rotation commands Status REFERENCE TO CDT_MCTOPLC_PLANAR_MOVER_STD_ R Reference to current operating status structure of the mover Utility I_TcIoXPlanarMover RO Interface to Mover TcIo Driver functions"},{"location":"interfaces.html#methods","title":"Methods","text":"Method Return Type Description AddToGroup I_PlanarTaskResult Adds mover to the XPlanar Group Disable I_PlanarTaskResult Disables the mover Enable I_PlanarTaskResult Enables the mover Halt I_PlanarTaskResult Halts the mover Reset I_PlanarTaskResult Resets the mover"},{"location":"interfaces.html#i_movecommands","title":"I_MoveCommands","text":"<p>Built in Mover functions that can be easily called from the application.</p> Method Return Type Description FreeMove I_PlanarTaskResult Command the mover to an XY position on the table. JoinTrack I_PlanarTaskResult Join the mover to a specified Track Segment LeaveTrack I_PlanarTaskResult Command mover to un-join its current track segment and move to a specified xy position Rotate I_PlanarTaskResult Rotate the mover a specified modulo C position and number of additional turns. SendToStation I_PlanarTaskResult Send the mover to a desired Station SquareUp I_PlanarTaskResult Rotate the mover to its nearest quarter angle and Zero the A and B Axis TiltA I_PlanarTaskResult Tilt the mover on the A Axis TiltB I_PlanarTaskResult Tilt the mover on the B Axis TrackMove I_PlanarTaskResult Command the mover to a specified linear position on a track segment. TrackMoveXY I_PlanarTaskResult Command the mover to a specified XY position on a track segment. VerticalMove I_PlanarTaskResult Raise or lower the mover on the Z Axis"},{"location":"interfaces.html#i_movedynamics","title":"I_MoveDynamics","text":"<p>Interface to Mover Dynamic Constraints</p>"},{"location":"interfaces.html#properties_2","title":"Properties","text":"Property Type Access Description Movement REFERENCE TO ST_MoveDynamics RW Sturcture of dynamic vars. Velocity, Accel, Decel, Jerk used by XYZ based move commands Rotation REFERENCE TO ST_MoveDynamics RW Sturcture of dynamic vars. Velocity, Accel, Decel, Jerk used by C Axis based rotate commands Tilt REFERENCE TO ST_MoveDynamics RW Sturcture of dynamic vars. Velocity, Accel, Decel, Jerk used by AB Axis based tilt commands"},{"location":"interfaces.html#i_xplanarstation","title":"I_XPlanarStation","text":"<p>Defines a specified area of a track where a mover is going to be processed.</p>"},{"location":"interfaces.html#properties_3","title":"Properties","text":"Property Type Access Description AllowQueing BOOL W Set to FALSE the sending station will not release mover until this station is clear CanReleaseMover BOOL W Set to FALSE if Immediate area around the station is blocked, do not release mover CurrentMover I_XPlanarMover R Interface pointer to the lead mover in the stations mover queue HasMover BOOL BOOL A Mover is currently in the defined station area ID UDINT RW Index number of the station MoverQueue Reference To FB_MoverQueue_ R Reference to the movers currently queued up in the station NextStation I_XPlanarStation RW Interface pointer to the next station to send the mover to NumMoversRequired UDINT RW Number of movers required by the station before station is ready to process. Positon REFERENCE TO PositionXYC R Reference to the postition of the station on the XPlanar table Size REFERENCE TO Position2D_LREAL_ RW Configured station size in X and Y StationComplete BOOL W Bit for an external process to tell the station that processing is complete and release the mover to the next station StationReady BOOL R Mover(s) are registered in the station and ready to command StationType E_StationType(UDINT) RW Type of function the station is being setup to do. TrackID I_XPlanarTrack RW Interface pointer to the track segment the station resides on. (do not set if not using tracks)"},{"location":"interfaces.html#methods_1","title":"Methods","text":"Method Return Type Description Execute null 'Automatic' function of the station.  Watch for a mover to arrive, execute a process if assigned, and send the mover away Reset BOOL Reset the internal state machine of the station"},{"location":"interfaces.html#i_xplanartrack","title":"I_XPlanarTrack","text":"<p>Defines functionality of a specified track segment</p>"},{"location":"interfaces.html#properties_4","title":"Properties","text":"Property Type Access Description Definition REFERENCE TO ST_TrackDefinition R Structure containing segment build definitions Error BOOL R Bit indicating an error occurred during the build process ErrorID UDINT R Identification number of error that occurred on the Track object Index UDINT RW Index number of the segment MoverCount UDINT R Number of movers currently on segment MovingMoverCount UDINT R Number of movers currently on segment and movers actively planned for movement on this segment pm REFERENCE TO MC_PlanarTrack R Reference to base planar motion functions Status REFERENCE TO CDT_MCTOPLC_PLANAR_TRACK R Current operating status structure of Track TrackLength UDINT R Linear length of track segment in mm Utility I_McPlanarTrack RO Interface to Track segment TcIo Driver functions"},{"location":"interfaces.html#methods_2","title":"Methods","text":"Method Return Type Description AddToGroup I_PlanarTaskResult Add the track segment to the XPlanar Group AppendLine I_PlanarTaskResult Append a line item to the track segment AppendPoint I_PlanarTaskResult Append a point item to the track segment Build I_PlanarTaskResult Build the track segment according to Definition configuration Clear I_PlanarTaskResult Clears all defined points from the track segment CloseLoop I_PlanarTaskResult Closes loop to the first defined track point Reset BOOL Reset the internal state machine of the station Disable I_PlanarTaskResult Disables the track segment Enable I_PlanarTaskResult Enables the track segment GetTrackPositionAt LREAL Calculates closest linear track point for a given XY coordinate Reset I_PlanarTaskResult Resets the track segment"},{"location":"interfaces.html#i_xplanarpart","title":"I_XPlanarPart","text":"<p>Defines functionality of the XPlanar Part Object</p>"},{"location":"interfaces.html#properties_5","title":"Properties","text":"Property Type Access Description ObjectID OTCID R Object ID of the XPlanar Part MC3 Object pm REFERENCE TO MC_PlanarPart R Reference to base planar motion functions State REFERENCE TO MC_PlanarState R Current State of the XPlanar Part"},{"location":"interfaces.html#methods_3","title":"Methods","text":"Method Return Type Description ForceDisable I_PlanarTaskResult Disables Xplanar part SetAllowEnable I_PlanarTaskResult Allows the XPlanar Part to be enabled by the Xplanar TcCom Reset I_PlanarTaskResult Resets the XPlanar Part"},{"location":"interfaces.html#i_xplanartile","title":"I_XPlanarTile","text":"<p>Defines functionality of the XPlanar Tile Object</p>"},{"location":"interfaces.html#properties_6","title":"Properties","text":"Property Type Access Description Btn STRING(13) R Btn number of the tile. DcLinkOk BOOL R Tile power is OK. Index UINT R Index of tile in array. PartIndex UINT Index of XPlanar Part Tile is configured in. PositionOnPart REFERENCE TO ST_TcIoTilePositionOnPart R Position of tile origin point in the XPlanar Part configuration Temperatures REFERENTE TO ST_TileTemperatures R Last read temperature of center and each tile quadrant (North, South, East, West) TimeToShutdown UDINT R Last read time in milliseconds to tile shutdown based on temperature Utility I_TcIoXPlanarTile Interface to Tile TcIo Driver functions"}]}